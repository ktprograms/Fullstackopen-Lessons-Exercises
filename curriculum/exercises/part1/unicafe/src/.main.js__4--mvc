const Model = {
    good: 0,
    neutral: 0,
    bad: 0,

    setGood(good) {
        Model.good = good;
    },
    setNeutral(neutral) {
        Model.neutral = neutral;
    },
    setBad(bad) {
        Model.bad = bad;
    },
};

const View = {
    registerOnGoodClick(handler) {
        document.querySelector('#button-good').addEventListener('click', handler);
    },
    registerOnNeutralClick(handler) {
        document.querySelector('#button-neutral').addEventListener('click', handler);
    },
    registerOnBadClick(handler) {
        document.querySelector('#button-bad').addEventListener('click', handler);
    },
    registerOnResetClick(handler) {
        document.querySelector('#button-reset').addEventListener('click', handler);
    },

    setGood(good) {
        document.querySelector('#text-good').textContent = good;
    },
    setNeutral(neutral) {
        document.querySelector('#text-neutral').textContent = neutral;
    },
    setBad(bad) {
        document.querySelector('#text-bad').textContent = bad;
    },
    setAll(all) {
        document.querySelector('#text-all').textContent = all;
    },
    setAverage(average) {
        document.querySelector('#text-average').textContent = average;
    },
    setPositive(positive) {
        document.querySelector('#text-positive').textContent = positive;
    },

    setShowStatistics(show) {
        if (show) {
            document.querySelector('#no-statistics').classList.add('hidden');
            document.querySelector('#statistics').classList.remove('hidden');
        } else {
            document.querySelector('#statistics').classList.add('hidden');
            document.querySelector('#no-statistics').classList.remove('hidden');
        }
    },
};

const Controller = {
    init() {
        View.registerOnGoodClick(Controller.handleGoodClick);
        View.registerOnNeutralClick(Controller.handleNeutralClick);
        View.registerOnBadClick(Controller.handleBadClick);
        View.registerOnResetClick(Controller.handleResetClick);
    },

    handleGoodClick() {
        Model.setGood(Model.good + 1);
        View.setGood(Model.good);
        Controller.setCalculatedStatistics();
    },
    handleNeutralClick() {
        Model.setNeutral(Model.neutral + 1);
        View.setNeutral(Model.neutral);
        Controller.setCalculatedStatistics();
    },
    handleBadClick() {
        Model.setBad(Model.bad + 1);
        View.setBad(Model.bad);
        Controller.setCalculatedStatistics();
    },
    handleResetClick() {
        Model.setGood(0);
        Model.setNeutral(0);
        Model.setBad(0);

        View.setGood(Model.good);
        View.setNeutral(Model.neutral);
        View.setBad(Model.bad);

        Controller.setCalculatedStatistics();
    },

    setCalculatedStatistics() {
        if (Controller.total() > 0) {
            View.setShowStatistics(true);
            View.setAll(Controller.total());
            View.setAverage(Controller.average());
            View.setPositive(Controller.positive());
        } else {
            View.setShowStatistics(false);
        }
    },

    total() {
        return Model.good + Model.neutral + Model.bad;
    },
    average() {
        return (Model.good + (Model.bad * -1)) / Controller.total();
    },
    positive() {
        return (Model.good / Controller.total()) * 100;
    },
};

Controller.init();
