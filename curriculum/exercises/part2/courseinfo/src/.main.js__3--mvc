const courses = [
    {
        name: 'Half Stack application development',
        id: 1,
        parts: [
            {
                name: 'Fundamentals of React',
                exercises: 10,
                id: 1,
            },
            {
                name: 'Using props to pass data',
                exercises: 7,
                id: 2,
            },
            {
                name: 'State of a component',
                exercises: 14,
                id: 3,
            },
            {
                name: 'Redux',
                exercises: 11,
                id: 4,
            },
        ],
    },
    {
        name: 'Node.js',
        id: 2,
        parts: [
            {
                name: 'Routing',
                exercises: 3,
                id: 1,
            },
            {
                name: 'Middlewares',
                exercises: 7,
                id: 2,
            },
        ],
    },
];

const View = {
    setCourseHeader(courseId, header) {
        const courseDiv = document.querySelector(`.course[data-id="${courseId}"]`);
        courseDiv.querySelector('.course__header').textContent = header;
    },
    setCourseTotal(courseId, total) {
        const courseDiv = document.querySelector(`.course[data-id="${courseId}"]`);
        courseDiv.querySelector('.course__total').textContent = total;
    },

    setPart(courseId, partId, partText) {
        const courseDiv = document.querySelector(`.course[data-id="${courseId}"]`);
        courseDiv.querySelector(`.course__part[data-id="${partId}"]`).textContent = partText;
    },

    createCoursePart(courseId, partId) {
        const part = document.createElement('p');
        part.classList.add('course__part');
        part.dataset.id = partId;

        const courseDiv = document.querySelector(`.course[data-id="${courseId}"]`);
        courseDiv.querySelector('.course__parts').appendChild(part);
    },
    createCourse(courseId) {
        const courseDiv = document.createElement('div');
        courseDiv.classList.add('course');
        courseDiv.dataset.id = courseId;

        const header = document.createElement('h2');
        header.classList.add('course__header');

        const partsDiv = document.createElement('div');
        partsDiv.classList.add('course__parts');

        const total = document.createElement('p');
        total.innerHTML = '<b>total of <span class="course__total"></span> exercises</b>';

        courseDiv.append(
            header,
            partsDiv,
            total
        );

        document.querySelector('.courses').appendChild(courseDiv);
    },
};

const Controller = {
    init() {
        courses.forEach(function (course) {
            View.createCourse(course.id);

            View.setCourseHeader(course.id, course.name);
            course.parts.forEach(function (part) {
                View.createCoursePart(course.id, part.id);

                const partText = part.name + ' ' + part.exercises;
                View.setPart(course.id, part.id, partText);
            });
            View.setCourseTotal(course.id, Controller.calculateTotal(course.parts));
        });
    },

    calculateTotal(parts) {
        return parts
            .map(function (part) {
                return part.exercises;
            })
            .reduce(function (acc, n) {
                return acc + n;
            }, 0);
    },
};

Controller.init();
